from ..event import MonomeEvent
from .ring import ArcRing

class ArcRotationEvent (MonomeEvent):
    def __init__(self, ring: int, delta: int):
        """
        Event generated by a rotational movement on Arc.

        Args:
            ring (int): The ring number (0-3) on the Arc.
            delta (int) : The change in position.
        """
        super().__init__()
        self.ring = ring
        self.delta = delta
    
    def __repr__(self):
        return f"ArcRotationEvent(ring={self.ring}, delta={self.delta})"

class ArcKeyEvent (MonomeEvent):
    def __init__(self, button: int, down: bool):
        """
        Event generated by a rotational movement on Arc.

        Args:
            button (int): The button index on the Arc (currently always 0)
            down (bool): Whether the button is pressed down (True) or released (False).
        """
        super().__init__()
        self.button = button
        self.down = down
    
    def __repr__(self):
        return f"ArcKeyEvent(ring={self.ring}, button={self.button}, down={self.down})"

class ArcUIRotationEvent (MonomeEvent):
    def __init__(self, ring: ArcRing, position: int, delta: int):
        """
        Event generated by a rotational movement on Arc.

        Args:
            ring (ArcRing): The Ring object on the ArcUI.
            position (int): The position of the ring.
            delta (int): The change in position.
        """
        super().__init__()
        self.ring = ring
        self.position = position
        self.delta = delta
    
    def __repr__(self):
        return f"ArcUIRotationEvent(ring={self.ring}, position={self.position}, delta={self.delta})"